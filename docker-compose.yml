services:
    mysql:
        image: mysql:8
        tty: true
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - db_data:/var/lib/mysql/

    traefik:
        image: traefik:v2.4
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - ./traefik.yml:/etc/traefik/traefik.yml
            - ./dynamic:/etc/traefik/dynamic:ro

    backend-blue:
        build: .
        env_file:
            - .env
        labels:
            - "traefik.http.routers.backend-blue.rule=Host(`blue.docker.localhost`)"
            - "traefik.http.services.backend-blue.loadbalancer.server.port=8080"
        volumes:
            - ./laravel-project/storage/app:/app/storage/app
            - ./laravel-project/storage/logs:/app/storage/logs
        depends_on:
            - mysql

    backend-green:
        build: .
        env_file:
            - .env
        labels:
            - "traefik.http.routers.backend-green.rule=Host(`green.docker.localhost`)"
            - "traefik.http.services.backend-green.loadbalancer.server.port=8080"
        volumes:
            - ./laravel-project/storage/app:/app/storage/app
            - ./laravel-project/storage/logs:/app/storage/logs
        depends_on:
            - mysql

    cadvisor:
        image: gcr.io/cadvisor/cadvisor
        ports:
            - 5080:8080
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            #- /var/run/docker.sock:/var/run/docker.sock:ro # Add only if you have your containers running on Mac

    node_exporter:
        image: quay.io/prometheus/node-exporter:latest
        container_name: node_exporter
        command:
            - '--path.rootfs=/host'
        restart: unless-stopped
        volumes:
            - '/:/host:ro,rslave'

    prometheus:
        image: prom/prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml

volumes:
    db_data:
        driver: local
